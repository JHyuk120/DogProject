<?xml version="1.0" encoding="UTF-8"?>
 
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="dev.mvc.notice.NoticeDAOInter"> 

    <!--  등록한 레코드 갯수 1 리턴 -->
  <insert id="create" parameterType="dev.mvc.notice.NoticeVO">
    INSERT INTO notice(noticeno, adminno, title, content, passwd, word,
                                     file1, file1saved, thumb1, size1, rdate)
    VALUES(notice_seq.nextval, #{adminno}, #{title}, #{content}, #{passwd}, #{word},
                #{file1}, #{file1saved}, #{thumb1}, #{size1}, sysdate)
  </insert>
  
 <!-- 모든 카테고리의 등록된 글목록 -->
  <select id="list_all" resultType="dev.mvc.notice.NoticeVO">
    SELECT noticeno, adminno, title, content, cnt, rdate,
              file1, file1saved, thumb1, size1
    FROM notice 
    ORDER BY noticeno DESC
  </select> 

    <!-- 일반적인 조회 -->
  <select id="read" resultType="dev.mvc.notice.NoticeVO" parameterType="int">
    SELECT noticeno, adminno, title, content, cnt, passwd, word, rdate,
              file1, file1saved
    FROM notice
    WHERE noticeno = #{noticeno}
  </select>
  
  
   <!-- 카테고리별 검색 목록 -->
  <select id="list_by_search" resultType="dev.mvc.notice.NoticeVO" parameterType="dev.mvc.notice.NoticeVO">
    SELECT noticeno, adminno, title, content, rdate
    FROM notice
    <choose>
      <when test="word == null or word == ''"> <!-- 검색하지 않는 경우 -->
        
      </when>
      <otherwise> <!-- 검색하는 경우 -->
        WHERE (UPPER(title) LIKE '%' || UPPER(#{word}) || '%' 
                                                  OR UPPER(content) LIKE '%' || UPPER(#{word}) || '%' 
                                                  OR UPPER(word) LIKE '%' || UPPER(#{word}) || '%')
      </otherwise>
    </choose>
    ORDER BY noticeno DESC   
  </select>
   
  <!-- 카테고리별 검색 레코드 갯수 -->
  <select id="search_count" resultType="int" parameterType="dev.mvc.notice.NoticeVO">
    SELECT COUNT(*) as cnt
    FROM notice
    <choose>
      <when test="word == null or word == ''"> <!-- 검색하지 않는 경우의 레코드 갯수 -->
        
      </when>
      <otherwise> <!-- 검색하는 경우의 레코드 갯수 -->
        WHERE (UPPER(title) LIKE '%' || UPPER(#{word}) || '%' 
                                                  OR UPPER(content) LIKE '%' || UPPER(#{word}) || '%' 
                                                  OR UPPER(word) LIKE '%' || UPPER(#{word}) || '%')
      </otherwise>
    </choose>
  </select>   
  
  <!-- 카테고리별 검색 목록 + 페이징 + 메인 이미지 -->   
  <select id="list_by_search_paging" resultType="dev.mvc.notice.NoticeVO" parameterType="dev.mvc.notice.NoticeVO">
   SELECT noticeno, adminno, title, content, rdate, r
   FROM (
              SELECT noticeno, adminno, title, content, rdate, rownum as r
              FROM (
                        SELECT noticeno, adminno, title, content, rdate
                        FROM notice
                        <choose>
                          <when test="word == null or word == ''">
                             
                          </when>
                          <otherwise>
                            WHERE (UPPER(title) LIKE '%' || #{word} || '%' 
                                                              OR UPPER(content) LIKE '%' || #{word} || '%' 
                                                              OR UPPER(word) LIKE '%' || #{word} || '%')
                          </otherwise>
                        </choose>
                        ORDER BY noticeno DESC
               )
    )
    WHERE <![CDATA[ r >= #{start_num} AND r <= #{end_num} ]]>
     
    <!--  1 page: WHERE r >= 1 AND r <= 10; 
            2 page: WHERE r >= 11 AND r <= 20;
            3 page: WHERE r >= 21 AND r <= 30; -->
     
  </select>   
  

   <!-- 패스워드 확인 -->
  <select id="password_check" resultType="int" parameterType="dev.mvc.notice.NoticeVO">
    SELECT COUNT(*) as cnt
    FROM notice
    WHERE noticeno = #{noticeno} AND passwd = #{passwd}
  </select>
  
    <!-- 글 수정 -->
  <update id="update_text" parameterType="dev.mvc.notice.NoticeVO">
    UPDATE notice
    SET title=#{title}, content=#{content}, word=#{word}
    WHERE noticeno = #{noticeno}
  </update>
  
   <!-- 파일 수정 -->
  <update id="update_file" parameterType="dev.mvc.notice.NoticeVO">
    UPDATE notice
    SET file1=#{file1}, file1saved=#{file1saved}, thumb1=#{thumb1}, size1=#{size1}
    WHERE noticeno = #{noticeno}
  </update>
  
   <!-- 삭제 -->
  <delete id="delete" parameterType="int">
    DELETE FROM notice
    WHERE noticeno=#{noticeno}
  </delete>
  
  <!-- 조회수 -->
  <update id="cnt_add" parameterType="int">
  update notice
  set cnt = cnt + 1
  where noticeno = #{noticeno}
  </update>

</mapper> 