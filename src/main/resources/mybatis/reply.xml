<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dev.mvc.reply.ReplyDAOInter">
<!-- 리뷰 조회 -->
<select id="reply_list" parameterType="int" resultType="dev.mvc.reply.ReplyVO">
    SELECT r.replyno, r.memberno, m.id AS mid, r.recipeno, r.replycont, r.rdate
    FROM reply r JOIN member m ON r.memberno = m.memberno
    WHERE r.recipeno = #{recipeno}
    ORDER BY rdate ASC
</select>

<!-- 리뷰 작성 -->
<insert id="reply_create" parameterType="dev.mvc.reply.ReplyVO">
  INSERT INTO reply(replyno,memberno,recipeno,replycont,rdate) 
  VALUES(reply_seq.nextval,#{memberno},#{recipeno},#{replycont, jdbcType=CLOB},sysdate)
</insert>

<!-- 게시물 별 댓글 수 -->
<select id="reply_count" resultType="int" parameterType="int">
 SELECT COUNT(*) as cnt
 FROM reply
 WHERE recipeno=#{recipieno}
</select>
  <!-- 댓글 조회 + 페이징-->
 
 <select id="list_by_reply_paging" resultType="dev.mvc.reply.ReplyVO" parameterType="HashMap">
SELECT replyno,memberno,mid,recipeno,replycont,rdate,r
   FROM (
              SELECT replyno,memberno,mid,recipeno,replycont,rdate,rownum as r
              FROM (
                         SELECT r.replyno, r.memberno, m.id AS mid, r.recipeno, r.replycont, r.rdate
                        FROM reply r 
                        JOIN member m 
                        ON r.memberno = m.memberno
                        WHERE r.recipeno = #{recipeno}
                        ORDER BY rdate DESC
               )
    )
    WHERE <![CDATA[ r >= #{start_num} AND r <= #{end_num} ]]>

  </select>   



  <!-- 댓글 개별 조회 -->
  <select id="reply_read" parameterType="int" resultType="dev.mvc.reply.ReplyVO">
  SELECT r.replycont,r.memberno,m.id AS mid,r.replyno
  FROM reply r JOIN member m ON r.memberno = m.memberno
  WHERE replyno=#{replyno}
  </select>
  <!-- 댓글 수정 -->
  <update id="reply_update" parameterType="dev.mvc.reply.ReplyVO" >
  UPDATE reply
  SET replycont = #{replycont}
  WHERE replyno = #{replyno}
  </update>
  <!-- 댓글 삭제 -->
  <delete id="reply_delete" parameterType="int">
  DELETE FROM reply
  WHERE replyno = #{replyno}
  </delete>
  <!-- 게시물별 댓글 수 조회 -->
  <select id="replycnt" parameterType="int" resultType="dev.mvc.reply.ReplyVO">
  SELECT COUNT(replyno) as replycnt
  FROM  reply
  WHERE recipeno = #{recipeno}
  </select> 

<!--댓글 추천 -->


<!-- 댓글최초 생성시 추천수 -->
<insert id="reply_recom_create" parameterType="HashMap">
 MERGE INTO reply_recom r
  USING (SELECT 1 as replyno FROM dual) vals
  ON (r.replyno = vals.replyno)

  WHEN MATCHED THEN
    UPDATE SET r.replyrecom = r.replyrecom + 1
    
  WHEN NOT MATCHED THEN
    INSERT (replyno,memberno,replyrecom)
    VALUES (vals.replyno,memberno=#{memberno},1);
</insert>

<!-- 추천 취소 -->
<update id="reply_recom_undo" parameterType="int">
  UPDATE reply_recom
  SET replyrecom = replyrecom-1
  WHERE replyno=#{replyno}
</update>

<!-- 추천 조회 -->
<select id="reply_recom" parameterType="int" resultType="int">
  SELECT replyrecom
  FROM reply_recom
  WHERE replyno=#{replyno}
</select>

 </mapper>