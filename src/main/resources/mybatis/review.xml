<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dev.mvc.review.ReviewDAOInter">
<!-- 리뷰 생성-->
<insert id="review_create" parameterType="dev.mvc.review.ReviewVO">
INSERT INTO review(reviewno,memberno,goodsno,reviewcont,rdate,ratingValue,file2, file2saved, thumb2, size2) 
VALUES(review_seq.nextval,#{memberno},#{goodsno},#{reviewcont},sysdate,#{ratingValue},#{file2},#{file2saved},#{thumb2},#{size2})
</insert>
<!-- 별점 평균 계산 -->
<update id="ratingAVG_cal" parameterType="int">
  UPDATE review
  SET ratingAvg = (
      SELECT ROUND(AVG(ratingValue), 2)
      FROM reply
      WHERE goodsno = #{goodsno}
      )
  WHERE goodsno = #{goodsno}
</update>
<!-- 별점 평균 조회 -->
<select id="ratingAVG" parameterType="int" resultType="float" >
  SELECT AVG(ratingValue)
  FROM review
  WHERE goodsno = #{goodsno}
</select>
<!-- 리뷰 조회 -->
<!-- 
<select id="review_list" parameterType="int" resultType="dev.mvc.review.ReviewVO">
SELECT r.reviewno,r.memberno,r.goodsno,m.id AS mid,r.reviewcont,r.rdate,r.ratingValue,r.ratingAVG
FROM review r JOIN member m on r.memberno = m.memberno
WHERE r.goodsno = ${goodsno}
ORDER BY rdate ASC
</select>
-->
  <!-- 댓글 개별 조회 (수정시 조회)-->
  <select id="review_read" parameterType="int" resultType="dev.mvc.review.ReviewVO">
  SELECT r.reviewcont,r.memberno,m.id AS mid,r.reviewno,r.file2, r.file2saved, r.thumb2, r.size2
  FROM review r JOIN member m ON r.memberno = m.memberno
  WHERE reviewno=#{reviewno}
  </select>

 <!-- 댓글 조회 + 페이징-->
 <select id="list_by_review_paging" resultType="dev.mvc.review.ReviewVO" parameterType="HashMap">
SELECT reviewno,memberno,mid,goodsno,reviewcont,rdate,ratingValue,file2, file2saved, thumb2, size2,ratingAVG, r
   FROM (
              SELECT reviewno,memberno,mid,goodsno,reviewcont,rdate,ratingValue,ratingAVG,file2, file2saved, thumb2, size2, rownum as r
              FROM (
                         SELECT r.reviewno, r.memberno, m.id AS mid, r.goodsno, r.reviewcont, r.rdate,r.file2,r.file2saved,          
                                      r.thumb2, r.size2, r.ratingValue,r.ratingAVG
                        FROM review r 
                        JOIN member m 
                        ON r.memberno = m.memberno
                        WHERE r.goodsno = #{goodsno}
                        ORDER BY rdate DESC
               )
    )
    WHERE <![CDATA[ r >= #{start_num} AND r <= #{end_num} ]]>

  </select>   
  
  <!-- 게시물 별 리뷰 수 -->
<select id="review_count" resultType="int" parameterType="int">
 SELECT COUNT(*) as cnt
 FROM review
 WHERE goodsno=#{goodsno}
</select>

<!-- 리뷰 수정 -->
  <update id="review_update" parameterType="dev.mvc.review.ReviewVO" >
  UPDATE review
  SET reviewcont = #{reviewcont}
  WHERE reviewno = #{reviewno}
  </update>
  
  <!-- 댓글 삭제 -->
<delete id="review_delete" parameterType="int">
  DELETE FROM review
  WHERE reviewno = #{review}
</delete>
<!-- 이미지 수정 -->
  <update id="update_file" parameterType="dev.mvc.review.ReviewVO">
    UPDATE reply
    SET file2=#{file2}, file2saved=#{file2saved}, thumb2=#{thumb2}, size2=#{size2}
    WHERE replyno = #{replyno}
  </update>
</mapper>